apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "24.0.1"

    defaultConfig {
        applicationId "com.example.alphadog.mytestapplication"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [CHANNEL: "dev"]
        ndk {
            moduleName "hello_jni"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }

    signingConfigs {
        release {
            storeFile file("MyTestApplication.jks")
            storePassword RELEASE_STORE_KEY
            keyAlias RELEASE_ALIAS
            keyPassword RELEASE_ALIAS_KEY
        }
    }
    
    buildTypes {
        release {
            multiDexEnabled true
            minifyEnabled true
            zipAlignEnabled true
//            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//          构建时多渠道重命名
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    if (output.outputFile != null && output.outputFile.name.endsWith("apk") && "release".equals(variant.buildType.name)) {
                        def apk = new File(output.outputFile.getParent(), "MyTestAplication_${variant.flavorName}_v${variant.versionName}_${getTime()}.apk")
                        output.outputFile = apk
                    }
                }
            }

        }
    }


    productFlavors {
        dev {
            applicationId "com.example.alphadog.mytestappliction.dev"
            buildConfigField('String', 'url', '"111111"')
            versionName = '1.0'
        }
        google {
            applicationId "com.example.alphadog.mytestappliction.google"
            buildConfigField('String', 'url', '"aaaaaa"')
            versionName = '1.0a'
        }
        wandoujia {
            applicationId "com.example.alphadog.mytestappliction.wandoujia"
            buildConfigField('String', 'url', '"bbbbbb"')
            versionName = '1.0b'
        }
    }
    productFlavors.all { flavors ->
        print(name)
        manifestPlaceholders.put("CHANNEL", name)
    }
    sourceSets {
        main {
            jni.srcDirs = ['src/main/jni', 'src/main/jni/']
//        manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'src/main/aidl']
//        resources.srcDirs = ['src/main/java', 'src/main/aidl']
            aidl.srcDirs = ['src/main/aidl']
//        res.srcDirs = ['src/main/res']
//        assets.srcDirs = ['src/main/assets']
        }
    }
}

def getTime() {
    def time = new Date().format('yyyyMMdd-HH')
    return time;
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
//    动画框架
    compile 'com.nineoldandroids:library:2.4.0'
//    网络图片缓存框架
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.google.dagger:dagger:2.6'
    apt 'com.google.dagger:dagger-compiler:2.6'
    compile 'com.jakewharton:butterknife:8.4.0'
}
